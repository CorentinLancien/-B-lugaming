{"remainingRequest":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\src\\App.vue","mtime":1639732748920},{"path":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\babel.config.js","mtime":1639732748912},{"path":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639557399440},{"path":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\babel-loader\\lib\\index.js","mtime":1639557401182},{"path":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639557399440},{"path":"C:\\Users\\coren\\Documents\\cours\\.NET\\Belugaming\\alpagaming\\node_modules\\vue-loader\\lib\\index.js","mtime":1639557401519}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-card\r\n      class=\"mx-auto\"\r\n      max-width=\"300\"\r\n      tile\r\n    >\r\n      <v-list dense>\r\n        <v-subheader>REPORTS</v-subheader>\r\n        <v-list-item-group\r\n          v-model=\"games\"\r\n          color=\"primary\"\r\n        > \r\n          <v-list-item\r\n            v-for=\"game in games\"\r\n            :key=\"game.Id\"\r\n          >\r\n            <v-list-item-content>\r\n              <v-list-item-title v-text=\"game.name\"></v-list-item-title>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </v-list-item-group>\r\n      </v-list>\r\n    </v-card>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios');\r\nexport default {\r\n  name: 'App',\r\n\r\n\r\n  data: () => ({\r\n    games : [],\r\n    apis: [\r\n      { \r\n        name: 'beluga',\r\n        url: '',\r\n        token: \"\"\r\n      },\r\n      { \r\n        name: 'thikler',\r\n        url: '',\r\n        token: \"\"\r\n      },\r\n      { \r\n        name: 'bigot',\r\n        url: '',\r\n        token: \"\"\r\n      },\r\n      { \r\n        name: 'william',\r\n        url: '',\r\n        token: \"\"\r\n      }          \r\n    ],\r\n    dataAuth : {}\r\n  }),\r\n\r\n  async mounted(){\r\n    await this.initApisUrl()\r\n    await this.getListGames()\r\n  },\r\n\r\n  methods:{\r\n      async getListGames(){\r\n        await this.auth();\r\n        await this.initApisUrl()\r\n        this.apis.forEach(async api => {\r\n          switch(api.name){\r\n            case \"beluga\":\r\n              api.url +=\"games\";\r\n              break;\r\n            case \"bigot\":\r\n              api.url +=\"games\";\r\n              break;\r\n            case \"thikler\":\r\n              api.url += \"List/VideoGames/Name\"\r\n              break;\r\n            case \"william\":\r\n              api.url += \"games\"\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          let rawResult = await axios({\r\n                  method: 'get',\r\n                  url: api.url,\r\n                  headers: {\r\n                    Authorization: api.token\r\n                  }, \r\n                });\r\n          if(rawResult.data.$values != null){\r\n            for(let game of  rawResult.data.$values){\r\n              this.games.push(game)\r\n            }    \r\n          }\r\n          else if(rawResult.data.result != null){\r\n            for(let game of  rawResult.data.result){\r\n              this.games.push(game)\r\n            }    \r\n          }\r\n          else{\r\n            for(let game of  rawResult.data){\r\n              this.games.push(game)\r\n            }    \r\n          }           \r\n        });\r\n    },\r\n      async auth(){\r\n        for (let api of this.apis) {\r\n          switch(api.name){\r\n            case 'beluga':\r\n              api.url+= \"auth\"\r\n              api.token = \"Bearer \"\r\n              this.dataAuth = {\r\n                username: \"admin\",\r\n                password: \"patafoin\"\r\n              }\r\n              break;\r\n            case 'bigot':\r\n              api.url+= \"users/login\"\r\n              this.dataAuth = {\r\n                email: \"quentin@live.fr\",\r\n                password: \"123456aA\"\r\n              }\r\n              break; \r\n            case 'thikler' :\r\n              api.token = \"Bearer \"\r\n              api.url+= \"auth\"\r\n              this.dataAuth = {\r\n                username: \"Klervia\",\r\n                password: \"Thibaut\"\r\n              }              \r\n              break;\r\n            case 'william' :\r\n              api.url+= \"signIn\"\r\n              this.dataAuth = {\r\n                email: \"cocodu53\",\r\n                password: \"erwan\"\r\n              }              \r\n              break;\r\n            default:\r\n              break;       \r\n          }\r\n\r\n\r\n          let rawResult = await axios({\r\n              method: 'post',\r\n              url: api.url,\r\n              headers: {}, \r\n              data: this.dataAuth\r\n          });  \r\n          if(rawResult.data.token != null){\r\n            api.token += rawResult.data.token \r\n          }\r\n          else{\r\n            api.token = rawResult.data.accessToken \r\n          }\r\n        }      \r\n    },\r\n\r\n    async initApisUrl(){\r\n      this.apis.forEach(api => {\r\n        switch(api.name){\r\n          case \"beluga\":\r\n            api.url = \"https://belugaming.herokuapp.com/api/\"\r\n            break;\r\n          case \"bigot\":\r\n            api.url = \"https://bigogaming.herokuapp.com/\"; \r\n            break;\r\n          case \"thikler\":\r\n            api.url = \"https://thikler.herokuapp.com/api/\"\r\n            break;\r\n          case \"william\":\r\n            api.url = \"https://bibliojvapi.herokuapp.com/api/\"\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n    });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n"],"sourceRoot":"src"}]}